참조타입의 변수를 선언한다는 것


String string 

int i

int value 

char 내가 쓰고싶은 변수명

기본 타입의 변수를 선언하는 건 딱히 어렵지 않고 직관적이다. 그리고 많이 쓰는 '그릇'이라는 비유를 적용하기에도 별 무리가 없다. 내가 문자열을 쓰고 싶으면 문자 타입(String)을 쓰고 내가 원하는 변수명을 써주면 되고, 숫자를 쓰고 싶으면 숫자 타입(int)이라고 써주면 된다.



Uri uri

Music music

원래 있는 클래스명 or 메서드명" "내가 쓰고싶은 변수명

하지만 정말이지 아직도 참조타입으로 변수를 선언하는 건 정말 황당하기도 하고 충격적이고 놀랍다. 사실 클래스라는 게 뭔지, 메서드가 어떤 건지도 잘 모르는 상태에서는 너무 이해가 안되고 답답한 부분이기도 했다. '아니, 클래스 안에는 줄줄이 길고 긴 코드밖에 없을건데 그 코드를 뭘 다 어떻게 쓰겠다고 그 자체로 '타입'이 되는거지?! 메서드는 또 어떻고? 그걸 타입으로 쓰려면 일단 그 안에 뭐가 들어있는지 다 외워야되는 거 아님? '타입'이란 단어 자체가 내가 알고 있는 게 잘못된 건가? 클래스 안에 뭐가 들어있는지 그걸 언제 다 외워? 미친거 아냐? 이게 말이 됨? 으아아아ㅏㅏㅏㅏㅏㅏㅏㅏ~~ 돌아버릴 것 같아~~~' 와 같은 생각이 배울 것만 해도 엄청 쏟아져 내리는 홍수같은 수업 시간 내내 머리를 꽉 채워서 막 머리가 터질 것 같았다. 이건 그냥 '아, 그렇구나'로 받아들일 수가 없는 거였다. 어쩌면 이런 복장 터짐이 무언가를 좀 늦게 시작하는 사람들에게 공통적으로 힘든 건지도 모른다.



Uri uri 

<내가 Uri에 뭐가 들어있는 줄 알고 Uri 타입의 uri란 변수를 선언한단 말인가..>

결론부터 말하면 외우는 게 맞다. 물론 외울 필요가 없는 게 얼마나 많은지 강조하는 수업을 들으면서 그 말 자체가 무척 불편하게 느껴진다는 것도 안다. 아마 내가 이걸 정말 솔직하게 물어봤다면 사실 상대방에게서 그 정도도 모르겠는 수준이면 개발 안 맞는 거니 그만두라는 말이 목구멍까지 차올랐을 수도 있다. 한국 사회는 원래 그렇다. 배우고 싶은 의지보다 시간 낭비하지 말란 말을 그토록 쉽게 한다. 앞으로 내가 그런 사람을 봐도 그런 식으로는 얘기하지 않기 위해서라도 그래서 난 그냥 내 생각이 맞다고 인정하기로 했다. 나처럼 완전히 개발계에서 유딩 수준인 사람들에게는 '외운다'라는 말이 맞을 수밖에 없는 것이다. 물론 그 외우는 수준은 마치 어린 아이가 배우는 한글의 ㄱㄴㄷ, 아야어여와 같다. 완전히 모르는 사람은 그걸 외우는 거지만 사실 외운다기보단 당연해진다는 말이 맞을 것이다.



Uri uri

 <Uri로 선언하기 위해서 Uri로 뭘 할 수 있는지는 기억해야하는 게 맞다.>

처음 'ㄱ'을 배우거나 혹은 가르칠 때 우리는 세종대왕님이 ㄱ을 어떻게 만들었는지까지는 굳이 알려줄 필요가 없다. 그냥 평소에 일상에서 말하는 소리들 - 가구, 가게, 가지 등 - 의 첫 글자들에 '가'가 포함되어 있고 앞으로 '가'라고 적힌 걸 보면 그 소릴 내서 읽을 수 있다는 것만 알려주면 되는 것이다. 참조타입의 변수의 그 '타입'이 되는 클래스에 무슨 코드가 어떻게 담겨있는지는 정말 몰라도 된다. 내가 변수를 Uri 타입으로 선언하면 내가 어떤 파일의 위치를 가져오는데 사용할 수 있고, 또는 코드 안에 Uri라고 선언된 게 있으면 아, 어떤 파일의 위치를 가져오겠구나, 만 알면 되는 것이다.



Uri uri 

<Uri에는 암튼 무슨 코드가 적혀있을 것이다. 그게 뭔진 몰라도 난 이제 uri변수를 써서 어떤 파일의 위치를 가져올 수 있다! >

물론 그걸 이해하기 위해서는, 아무리 끝이 없이 길고 긴 코드로 구성된 클래스나 메서드라도 모든 한 줄 한 줄이 어떤 '사용'을 위해서 나누어져 있다는 것도 알면 좋다. 마치 아무리 긴 글이나 어떤 논문이라도 처음부터 끝까지 한 문단인 경우는 없듯이 말이다. 심지어 내가 만든 클래스일 경우는 클래스 안에 아무 코드도 안 쓰고도 다른 클래스의 변수에 참조타입으로 써놔도 전혀 오류나 에러가 나지 않는다. 그 타입으로 쓴 클래스 안에 코드는 내가 나중에 쓸 수도 있고, 또 쓴 것도 바꿀 수 있기도 하다. 그게 진짜.. 생각하면 할수록 너무 신기하다. 어떻게 그런 생각으로 이걸 만들 수 있었을까 싶을 정도로.



Uri uri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;

<이 짧은 한 줄이 아주 중요할 때가 있다>

타입이란 말은 0과1을 어떻게 저장했고 어떻게 읽을지 컴퓨터에게 시킬 때 사용한다. 예를 들어 기본타입은 사람이 볼 수 있는 문자, 숫자를 컴퓨터는 0과 1로만 저장하는데 나중에 그 정보를 다시 불러올 때 컴퓨터에게 그 저장한 0과 1이 문자였는지 숫자였는지 알려줘야 컴퓨터가 다시 나에게 제대로된 원래 정보로 줄 수 있다. 참조 타입이도 마찬가지다. 이 경우에는 사람이 알 수 있는 문자나 숫자로 굳이 변환할 필요 없이 그냥 컴퓨터가 데이터를 어디다 저장했는지 컴퓨터 안에서만 해석하면 된다. 즉, 파일 위치를 알기 위해서 나는 0과 1로만 저장되어 있는 파일 위치를 Uri라는 클래스로 타입을 선언한 변수에 담아올 수 있다.

단지 이것을 알기 위해 또... 시간이 많이많이 갔다.. 이 글이 파일위치 불러오고 Uri도 모르는 사람들에게 도움이 되었으면 좋겠다.ㅠㅠ

결론 : 참조타입 변수는 참조타입인 클래스에 적혀있는 어떤 방식으로 데이터를 담을 수 있는 변수를 만든다. 이 때 그 클래스가 무슨 코드를 담고 있는지는 전혀 몰라도 된다. 즉, 그냥 단순히 문자나 숫자가 아닌 내가 원하는 어떤 특정 데이터를 가진 변수를 만들기 위해서, 그 데이터를 가져오는 기능을 가진 클래스 자체를 타입으로 사용할 수 있다.
  








객체를 생성한다는 것

new Uri
new Music

생성하는 것.
